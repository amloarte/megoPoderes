//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos.ServicioDalWcf {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParametersIn", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.WCF")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Datos.ServicioDalWcf.ParametersOut))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Data.DbType))]
    public partial class ParametersIn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrNameParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DbType dbTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object objValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrNameParameter {
            get {
                return this.StrNameParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.StrNameParameterField, value) != true)) {
                    this.StrNameParameterField = value;
                    this.RaisePropertyChanged("StrNameParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DbType dbType {
            get {
                return this.dbTypeField;
            }
            set {
                if ((this.dbTypeField.Equals(value) != true)) {
                    this.dbTypeField = value;
                    this.RaisePropertyChanged("dbType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object objValue {
            get {
                return this.objValueField;
            }
            set {
                if ((object.ReferenceEquals(this.objValueField, value) != true)) {
                    this.objValueField = value;
                    this.RaisePropertyChanged("objValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParametersOut", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.WCF")]
    [System.SerializableAttribute()]
    public partial class ParametersOut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrNameParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DbType dbTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrNameParameter {
            get {
                return this.StrNameParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.StrNameParameterField, value) != true)) {
                    this.StrNameParameterField = value;
                    this.RaisePropertyChanged("StrNameParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DbType dbType {
            get {
                return this.dbTypeField;
            }
            set {
                if ((this.dbTypeField.Equals(value) != true)) {
                    this.dbTypeField = value;
                    this.RaisePropertyChanged("dbType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                if ((this.sizeField.Equals(value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDalWcf.IServicioDAL")]
    public interface IServicioDAL {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/AddInParameter", ReplyAction="http://tempuri.org/IServicioDAL/AddInParameterResponse")]
        void AddInParameter(Datos.ServicioDalWcf.ParametersIn param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/AddInParameter", ReplyAction="http://tempuri.org/IServicioDAL/AddInParameterResponse")]
        System.Threading.Tasks.Task AddInParameterAsync(Datos.ServicioDalWcf.ParametersIn param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/AddOutParameter", ReplyAction="http://tempuri.org/IServicioDAL/AddOutParameterResponse")]
        void AddOutParameter(Datos.ServicioDalWcf.ParametersOut param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/AddOutParameter", ReplyAction="http://tempuri.org/IServicioDAL/AddOutParameterResponse")]
        System.Threading.Tasks.Task AddOutParameterAsync(Datos.ServicioDalWcf.ParametersOut param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ParameterOut", ReplyAction="http://tempuri.org/IServicioDAL/ParameterOutResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Datos.ServicioDalWcf.ParametersIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Datos.ServicioDalWcf.ParametersOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.DbType))]
        object ParameterOut(string strParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ParameterOut", ReplyAction="http://tempuri.org/IServicioDAL/ParameterOutResponse")]
        System.Threading.Tasks.Task<object> ParameterOutAsync(string strParameter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteDataSet", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteDataSetResponse")]
        System.Data.DataSet ExecuteDataSet(string strNameSP, string strNameBD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteDataSet", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteDataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExecuteDataSetAsync(string strNameSP, string strNameBD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/EmptyLists", ReplyAction="http://tempuri.org/IServicioDAL/EmptyListsResponse")]
        void EmptyLists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/EmptyLists", ReplyAction="http://tempuri.org/IServicioDAL/EmptyListsResponse")]
        System.Threading.Tasks.Task EmptyListsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteNonQuery", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteNonQueryResponse")]
        int ExecuteNonQuery(string strNameSP, string strNameBD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteNonQuery", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteNonQueryResponse")]
        System.Threading.Tasks.Task<int> ExecuteNonQueryAsync(string strNameSP, string strNameBD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteScalar", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Datos.ServicioDalWcf.ParametersIn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Datos.ServicioDalWcf.ParametersOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.DbType))]
        object ExecuteScalar(string strNameSP, string strNameBD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioDAL/ExecuteScalar", ReplyAction="http://tempuri.org/IServicioDAL/ExecuteScalarResponse")]
        System.Threading.Tasks.Task<object> ExecuteScalarAsync(string strNameSP, string strNameBD);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioDALChannel : Datos.ServicioDalWcf.IServicioDAL, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioDALClient : System.ServiceModel.ClientBase<Datos.ServicioDalWcf.IServicioDAL>, Datos.ServicioDalWcf.IServicioDAL {
        
        public ServicioDALClient() {
        }
        
        public ServicioDALClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioDALClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioDALClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioDALClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddInParameter(Datos.ServicioDalWcf.ParametersIn param) {
            base.Channel.AddInParameter(param);
        }
        
        public System.Threading.Tasks.Task AddInParameterAsync(Datos.ServicioDalWcf.ParametersIn param) {
            return base.Channel.AddInParameterAsync(param);
        }
        
        public void AddOutParameter(Datos.ServicioDalWcf.ParametersOut param) {
            base.Channel.AddOutParameter(param);
        }
        
        public System.Threading.Tasks.Task AddOutParameterAsync(Datos.ServicioDalWcf.ParametersOut param) {
            return base.Channel.AddOutParameterAsync(param);
        }
        
        public object ParameterOut(string strParameter) {
            return base.Channel.ParameterOut(strParameter);
        }
        
        public System.Threading.Tasks.Task<object> ParameterOutAsync(string strParameter) {
            return base.Channel.ParameterOutAsync(strParameter);
        }
        
        public System.Data.DataSet ExecuteDataSet(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteDataSet(strNameSP, strNameBD);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExecuteDataSetAsync(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteDataSetAsync(strNameSP, strNameBD);
        }
        
        public void EmptyLists() {
            base.Channel.EmptyLists();
        }
        
        public System.Threading.Tasks.Task EmptyListsAsync() {
            return base.Channel.EmptyListsAsync();
        }
        
        public int ExecuteNonQuery(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteNonQuery(strNameSP, strNameBD);
        }
        
        public System.Threading.Tasks.Task<int> ExecuteNonQueryAsync(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteNonQueryAsync(strNameSP, strNameBD);
        }
        
        public object ExecuteScalar(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteScalar(strNameSP, strNameBD);
        }
        
        public System.Threading.Tasks.Task<object> ExecuteScalarAsync(string strNameSP, string strNameBD) {
            return base.Channel.ExecuteScalarAsync(strNameSP, strNameBD);
        }
    }
}
